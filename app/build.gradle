apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.admin.myopencvdemo"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        mavenCentral()
        flatDir {
            dirs 'libs'
        }
    }
    //引用so文件的时候必须加入这段代码，否则无法导入so包
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ['src/main/jni']
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }

    /*externalNativeBuild{
        ndkBuild{
            path "src/main/jni/Android.mk"
        }
    }*/
}

dependencies {
implementation fileTree(include: ['*.jar'], dir: 'libs')
implementation 'com.android.support:appcompat-v7:26.0.0'
implementation 'com.android.support.constraint:constraint-layout:1.1.3'
compile project(path: ':opencv4.0')
}

task nativeLibsToJar(type: Jar, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

